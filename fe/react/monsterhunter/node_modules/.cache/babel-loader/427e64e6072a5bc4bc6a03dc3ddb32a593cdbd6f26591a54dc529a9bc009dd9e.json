{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\monster-hunter\\\\fe\\\\react\\\\monsterhunter\\\\src\\\\components\\\\MonsterList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../api\";\nimport \"./MonsterList.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquareCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonsterList = ({\n  monsters,\n  setMonsters,\n  setSelectedID,\n  refreshList,\n  setRefreshList\n}) => {\n  _s();\n  const [filter, setFilter] = useState(\"\");\n  useEffect(() => {\n    fetchMonsters();\n  }, []);\n  useEffect(() => {\n    fetchMonsters();\n    setRefreshList(false);\n  }, [refreshList]);\n  useEffect(() => {\n    filterMonsters();\n  }, [filter, setFilter]);\n  const fetchMonsters = async () => {\n    try {\n      const response = await api.get();\n      setMonsters(response.data);\n    } catch (error) {\n      console.error(\"Error fetching monsters:\", error);\n    }\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  const clearFilter = () => {\n    setFilter(\"\");\n  };\n  const filterMonsters = async () => {\n    try {\n      const response = await api.get(\"/filter=\" + filter);\n      setMonsters(response.data);\n    } catch (error) {\n      console.error(\"Error filtering monsters:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter items...\",\n        value: filter,\n        onChange: handleFilterChange,\n        className: \"filter-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearFilter,\n        className: \"clear-filter-button\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: monsters.map(monster => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monster-card\",\n        onClick: () => setSelectedID(monster.id),\n        style: {\n          backgroundImage: `url(\"${monster.imageURL}\")`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monster-image\",\n          style: {\n            backgroundImage: `url(\"${monster.imageURL}\")`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monster-name-lang\",\n          children: [monster.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"monster-lang\",\n            children: [\"(\", monster.lang, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monster-size\",\n          children: [monster.size, \" cl\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monster-date-owned\",\n          children: [monster.owned ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"monster-owned\",\n            icon: faSquareCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this) : \"\", monster.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, monster.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MonsterList, \"NjsRmHxVzyQU6rw1R+NSQ7S8xzc=\");\n_c = MonsterList;\nexport default MonsterList;\nvar _c;\n$RefreshReg$(_c, \"MonsterList\");","map":{"version":3,"names":["React","useState","useEffect","api","FontAwesomeIcon","faSquare","faSquareCheck","jsxDEV","_jsxDEV","MonsterList","monsters","setMonsters","setSelectedID","refreshList","setRefreshList","_s","filter","setFilter","fetchMonsters","filterMonsters","response","get","data","error","console","handleFilterChange","event","target","value","clearFilter","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","monster","id","style","backgroundImage","imageURL","name","lang","size","owned","icon","date","_c","$RefreshReg$"],"sources":["D:/dev/monster-hunter/fe/react/monsterhunter/src/components/MonsterList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport api from \"../api\";\r\nimport \"./MonsterList.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSquareCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst MonsterList = ({\r\n  monsters,\r\n  setMonsters,\r\n  setSelectedID,\r\n  refreshList,\r\n  setRefreshList,\r\n}) => {\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchMonsters();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMonsters();\r\n    setRefreshList(false);\r\n  }, [refreshList]);\r\n\r\n  useEffect(() => {\r\n    filterMonsters();\r\n  }, [filter, setFilter]);\r\n\r\n  const fetchMonsters = async () => {\r\n    try {\r\n      const response = await api.get();\r\n      setMonsters(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching monsters:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setFilter(\"\");\r\n  };\r\n\r\n  const filterMonsters = async () => {\r\n    try {\r\n      const response = await api.get(\"/filter=\" + filter);\r\n      setMonsters(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error filtering monsters:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-container\">\r\n      <div className=\"filter-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter items...\"\r\n          value={filter}\r\n          onChange={handleFilterChange}\r\n          className=\"filter-input\"\r\n        />\r\n        <button onClick={clearFilter} className=\"clear-filter-button\">\r\n          X\r\n        </button>\r\n      </div>\r\n      <div className=\"card-container\">\r\n        {monsters.map((monster) => (\r\n          <div\r\n            className=\"monster-card\"\r\n            key={monster.id}\r\n            onClick={() => setSelectedID(monster.id)}\r\n            style={{\r\n              backgroundImage: `url(\"${monster.imageURL}\")`,\r\n            }}\r\n          >\r\n            <div\r\n              className=\"monster-image\"\r\n              style={{\r\n                backgroundImage: `url(\"${monster.imageURL}\")`,\r\n              }}\r\n            ></div>\r\n\r\n            <div className=\"monster-name-lang\">\r\n              {monster.name}{\" \"}\r\n              <span className=\"monster-lang\">({monster.lang})</span>\r\n            </div>\r\n            <div className=\"monster-size\">{monster.size} cl</div>\r\n            <div className=\"monster-date-owned\">\r\n              {monster.owned ? (\r\n                <FontAwesomeIcon\r\n                  className=\"monster-owned\"\r\n                  icon={faSquareCheck}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {monster.date}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonsterList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
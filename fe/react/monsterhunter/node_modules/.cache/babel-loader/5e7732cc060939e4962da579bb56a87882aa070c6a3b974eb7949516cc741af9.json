{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\monster-hunter\\\\fe\\\\react\\\\monsterhunter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useState } from \"react\";\nimport MonsterList from \"./components/MonsterList\";\nimport EditForm from \"./components/EditForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [monsters, setMonsters] = useState([]);\n  const [selectedID, setSelectedID] = useState(-1);\n  const [refreshList, setRefreshList] = useState(false);\n  const [isFormVisible, setFormVisible] = useState(false);\n  const saveMonster = () => {\n    setRefreshList(true);\n    setSelectedID(-1);\n    setFormVisible(false);\n  };\n  useEffect(() => {\n    if (selectedID !== -1) setFormVisible(true);\n  }, [selectedID]);\n  useEffect(() => {\n    if (!isFormVisible) setSelectedID(-1);\n  }, [isFormVisible]);\n  const toggleFormVisibility = () => {\n    setFormVisible(!isFormVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: isFormVisible ? \"cancel-button\" : \"add-button\",\n          icon: faPlus\n          // onClick={isFormVisible ? saveMonster() : () => setFormVisible(true)}\n          ,\n          onClick: toggleFormVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isFormVisible ? \"edit-form-visible\" : \"edit-form-hidden\",\n          children: /*#__PURE__*/_jsxDEV(EditForm, {\n            saveMonster: saveMonster,\n            selectedID: selectedID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonsterList, {\n        className: \"monster-list\",\n        monsters: monsters,\n        setMonsters: setMonsters,\n        setSelectedID: setSelectedID,\n        refreshList: refreshList,\n        setRefreshList: setRefreshList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HW7aK4H7gzOfZa2iV3ti2r8mpVM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MonsterList","EditForm","FontAwesomeIcon","faPlus","jsxDEV","_jsxDEV","App","_s","monsters","setMonsters","selectedID","setSelectedID","refreshList","setRefreshList","isFormVisible","setFormVisible","saveMonster","toggleFormVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","_c","$RefreshReg$"],"sources":["D:/dev/monster-hunter/fe/react/monsterhunter/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useState } from \"react\";\nimport MonsterList from \"./components/MonsterList\";\nimport EditForm from \"./components/EditForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [monsters, setMonsters] = useState([]);\n  const [selectedID, setSelectedID] = useState(-1);\n  const [refreshList, setRefreshList] = useState(false);\n  const [isFormVisible, setFormVisible] = useState(false);\n\n  const saveMonster = () => {\n    setRefreshList(true);\n    setSelectedID(-1);\n    setFormVisible(false);\n  };\n\n  useEffect(() => {\n    if (selectedID !== -1) setFormVisible(true);\n  }, [selectedID]);\n\n  useEffect(() => {\n    if (!isFormVisible) setSelectedID(-1);\n  }, [isFormVisible]);\n\n  const toggleFormVisibility = () => {\n    setFormVisible(!isFormVisible);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\"></div>\n      <div className=\"main\">\n        <div className=\"form\">\n          <FontAwesomeIcon\n            className={isFormVisible ? \"cancel-button\" : \"add-button\"}\n            icon={faPlus}\n            // onClick={isFormVisible ? saveMonster() : () => setFormVisible(true)}\n            onClick={toggleFormVisibility}\n          />\n          <div\n            className={isFormVisible ? \"edit-form-visible\" : \"edit-form-hidden\"}\n          >\n            <EditForm saveMonster={saveMonster} selectedID={selectedID} />\n          </div>\n        </div>\n\n        <MonsterList\n          className=\"monster-list\"\n          monsters={monsters}\n          setMonsters={setMonsters}\n          setSelectedID={setSelectedID}\n          refreshList={refreshList}\n          setRefreshList={setRefreshList}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}